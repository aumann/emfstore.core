#
# Conflict description texts
#


attributeconflict = You have changed the [feature] attribute of [modelelement] to [myvalue]. This attribute was changed to [theirvalue] on the repository.
branchmerge.attributeconflict = The [feature] attribute of [modelelement] was changed to [myvalue] on the incoming branch. This attribute is set to [theirvalue] on the current branch.


diagramconflict = The diagram layout of [modelelement], which you have edited, was edited on the repository as well.
branchmerge.diagramconflict = The diagram layout of [modelelement] was modified both on the incoming as well as the current branch.


multiattributeconflict.my = You have added an element to the [feature] attribute of [modelelement], which was removed in the repository.
multiattributeconflict.their = An element of the [feature] attribute of [modelelement] was added in the repository. You chose to remove it.
branchmerge.multiattributeconflict.my = An element was added to the [feature] attribute of [modelelement] on the incoming branch, which was removed in the current.
branchmerge.multiattributeconflict.their = An element of the [feature] attribute of [modelelement] was added on this branch, which was removed on the incoming branch.


multiattributemoveconflict.my = You have added an element to the [feature] attribute of [modelelement], which was moved in the repository.
multiattributemoveconflict.their = You've moved an element of the [feature] attribute of [modelelement], which stands in conflict with an add on the repository.
branchmerge.multiattributemoveconflict.my = An element was added to the [feature] attribute of [modelelement] on the incoming branch, which was moved on the current branch.
branchmerge.multiattributemoveconflict.their = An element of the [feature] attribute of [modelelement] was added on the other branch, which stands in conflict with the add on the current.


multiattributemovesetconflict.my = You have changed an element from the [feature] attribute of [modelelement], which was moved in the repository.
multiattributemovesetconflict.their = You have moved an element  from the [feature] attribute of [modelelement], which was changed in the repository.
branchmerge.multiattributemovesetconflict.my = An element from the [feature] attribute of [modelelement] was changed on the incoming branch and moved on the current.
branchmerge.multiattributemovesetconflict.their = An element from the [feature] attribute of [modelelement] was moved on the incoming branch and changed on the current.


multiattributesetconflict.my = You have removed an element from the [feature] attribute of [modelelement], which was changed in the repository.
multiattributesetconflict.their = You have changed an element from the [feature] attribute of [modelelement], which was removed in the repository.
branchmerge.multiattributesetconflict.my = An element from the [feature] attribute of [modelelement] was removed on the incoming branch and changed on the current.
branchmerge.multiattributesetconflict.their = An element from the [feature] attribute of [modelelement] was changed on the incoming branch, but removed on the current.


multiattributesetsetconflict = You have changed an element from the [feature] attribute of [modelelement], which was changed in the repository.
branchmerge.multiattributesetsetconflict = An element from the [feature] attribute of [modelelement] was changed on the incoming as well as the current branch.


compositeconflict.my = A change on the [opposite] from the repository conflicts with your operation "[compdescription]".
compositeconflict.their = Your change on the [opposite] conflicts with the operation "[compdescription]" from the repository.
branchmerge.compositeconflict.my = A change on the [opposite] from current branch conflicts with the incoming operation "[compdescription]".
branchmerge.compositeconflict.their = The incoming change on the [opposite] conflicts with the operation "[compdescription]" from the current branch.


deletionconflict.my = You have deleted the [modelelement]. This deletion conflicts with a change on the [firstother] element[otherinvolved]. Please choose an option.
deletionconflict.their = The [modelelement] was deleted on the repository which conflicts with the change on your [firstother][otherinvolved]. Please choose an option.
branchmerge.deletionconflict.my = [modelelement] was deleted on the incoming branch. This deletion conflicts with a change on the [firstother] element[otherinvolved]. Please choose an option.
branchmerge.deletionconflict.their = The [modelelement] was deleted on the current branch which conflicts with the change from the incoming branch on [firstother][otherinvolved]. Please choose an option.


multireferenceconflict.containment = You have moved [target] to the [feature] reference of [modelelement], on the repository it was moved to [othercontainer].
multireferenceconflict.my = You have added [target] to the [feature]" + " reference of the [modelelement]. This item was removed on the repository.
multireferenceconflict.their = The [target] was added to the [feature] reference of the [modelelement] on the repository. You chose to remove it, please decide.
branchmerge.multireferenceconflict.containment = [target]  was moved to the [feature] reference of [modelelement] on the incoming branch, on the current branch it was moved to [othercontainer].
branchmerge.multireferenceconflict.my = [target] was added to the [feature]" + " reference of the [modelelement] on the incoming branch. This item was removed on the current branch.
branchmerge.multireferenceconflict.their = The [target] was added to the [feature] reference of the [modelelement] on the current branch, but was deleted on the current branch.


multireferencesetconflict.containment = You have moved [target] to the [feature] reference of [modelelement], on the repository it was moved to [othercontainer].
multireferencesetconflict.my = You have removed [target] from the [feature] reference of [modelelement], which was set in the repository.
multireferencesetconflict.their = You have set [target] in the [feature] reference of [modelelement], which was removed in the repository.
branchmerge.multireferencesetconflict.containment = [target] was moved to the [feature] reference of [modelelement] on the incoming branch, on the current branch it was moved to [othercontainer].
branchmerge.multireferencesetconflict.my = [target] was removed from the [feature] reference of [modelelement] on the incoming branch, which was set on the current branch.
branchmerge.multireferencesetconflict.their = [target] was set in the [feature] reference of [modelelement] on the incoming branch, which was removed in the current branch.

multireferencesetsetconflict.set = You have set the value [value] to the [feature] reference of [modelelement], it was set to [ovalue] on the repository.
multireferencesetsetconflict.move = You have moved the element [value] to [modelelement], it was moved to [othercontainer] on the repository.
branchmerge.multireferencesetsetconflict.set = The value [value] was set to the [feature] reference of [modelelement] on the incoming branch, it was set to [ovalue] on the current branch.
branchmerge.multireferencesetsetconflict.move = The element [value] was moved to [modelelement] on the incoming branch, it was moved to [othercontainer] on the current branch.


multireferencesetsingleconflict = You have moved [target] to the [feature] reference of [modelelement], on the repository it was moved to [othercontainer].
branchmerge.multireferencesetsingleconflict = [target] was moved to the [feature] reference of [modelelement] on the incoming branch, on the current branch it was moved to [othercontainer].


multireferencesingleconflict = You have moved [target] to the [feature] reference of [modelelement], on the repository it was moved to [othercontainer].
branchmerge.multireferencesingleconflict = [target] was moved to the [feature] reference of [modelelement] on the incoming branch, on the current branch it was moved to [othercontainer].


singlereferenceconflict.move = You have moved the [modelelement] to the [myvalue]. This element was moved to [theirvalue] on the repository. Please decide.
singlereferenceconflict.set = You have changed the reference [feature] of [modelelement] to [myvalue]. This reference was set to [theirvalue] on the repository. Please decide.
branchmerge.singlereferenceconflict.move = [modelelement] was moved to the [myvalue] on the incoming branch. This element was moved to [theirvalue] on the current branch. Please decide.
branchmerge.singlereferenceconflict.set = The reference [feature] of [modelelement] was changed to [myvalue] on the incoming branch. This reference was set to [theirvalue] on the current branch. Please decide.


